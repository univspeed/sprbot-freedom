package com.cybercloud.sprbotfreedom.platform.enums;

import lombok.AllArgsConstructor;
import lombok.Getter;
import org.apache.commons.lang3.StringUtils;

/**
 * 系统错误码枚举
 * @author liuyutang
 * @date 2023/7/6
 */
@Getter
@AllArgsConstructor
public enum SystemErrorCode {
    ERROR_200("200", "响应成功。"),
    ERROR_400("400", "错误的请求。由于语法错误，该请求无法完成。"),
    ERROR_401("401", "无权限访问"),
    ERROR_403("403", "已禁止。服务器拒绝响应"),
    ERROR_404("404", "未找到。无法找到请求的位置"),
    ERROR_405("405", "方法不被允许。使用该位置不支持的请求方法进行了请求"),
    ERROR_406("406", "不可接受。服务器只生成客户端不接受的响应"),
    ERROR_407("407", "需要代理身份验证。客户端必须先使用代理对自身进行身份验证"),
    ERROR_408("408", "请求超时。等待请求的服务器超时"),
    ERROR_409("409", "冲突。由于请求中的冲突，无法完成该请求"),
    ERROR_410("410", "过期。请求页不再可用"),
    ERROR_411("411", "长度必需。未定义“内容长度”"),
    ERROR_412("412", "前提条件不满足。请求中给定的前提条件由服务器评估为 false"),
    ERROR_413("413", "请求实体太大。服务器不会接受请求，因为请求实体太大"),
    ERROR_414("414", "请求 URI 太长。服务器不会接受该请求，因为 URL 太长"),
    ERROR_415("415", "不支持的媒体类型。服务器不会接受该请求，因为媒体类型不受支持"),
    ERROR_416("416", "HTTP 状态代码 {}"),
    ERROR_422("422", "当创建一个对象时，发生一个验证错误"),
    ERROR_423("423", "参数校验失败，未找到校验组参数"),
    ERROR_424("424", "参数校验失败，错误的参数格式"),
    ERROR_500("500", "内部服务器错误"),
    ERROR_501("501", "未实现，服务器不识别该请求方法，或者服务器没有能力完成请求"),
    ERROR_502("502", "网关错误"),
    ERROR_503("503", "服务不可用，服务器当前不可用(过载或故障)"),
    ERROR_504("504", "网关超时"),
    ERROR_10000("10000", "幂等方法令牌生成失败"),
    ERROR_10001("10001", "未找到方法幂等令牌参数"),
    ERROR_10002("10002", "无效的幂等令牌"),
    ERROR_20000("20000", "定时任务已存在，无法重复添加"),
    ERROR_40004("40004", "数据不能重复"),
    ERROR_40002("40002", "参数不能为空"),
    ERROR_40007("40007", "密码过期"),
    ERROR_40008("40008", "用户:%s不在线"),
    ERROR_40009("40009", "租户通知地址为空，因此不需要发送通知"),
    ERROR_40010("40010", "向租户发送应用上线通知失败"),
    ERROR_40011("40011", "请先选择应用"),
    ERROR_50000("50000", "密码重置成功"),
    ERROR_50001("50001", "旧密码和原密码不一致"),
    ERROR_50002("50002", "新密码与确认密码不一致"),
    ERROR_50003("50003", "账户已锁定，请联系管理员进行解锁"),
    ERROR_50004("50004", "账户或密码不正确"),
    ERROR_50005("50005", "该账户未设置邮箱，请联系管理员进行添加"),
    ERROR_50006("50006", "新旧密码不能一样"),
    ERROR_50007("50007", "密码复杂度不符合要求"),
    ERROR_60001("60001", "频点数据被占用，无法进行删除"),
    ERROR_70000("70000", "验证码不能为空"),
    ERROR_70001("70001", "验证码已失效，请重新获取"),
    ERROR_70002("70002", "验证码校验失败，请重新校验"),
    ERROR_70003("70003", "验证码校验成功"),
    ERROR_80000("80000", "应用元数据加载成功"),
    ERROR_80001("80001", "应用存在部署关系，无法执行删除"),
    ERROR_80002("80002", "应用元数据加载失败"),
    ERROR_90000("90000", "未登录用户单日上传数量超出限制，请联系运维人员扩容。"),
    ERROR_90001("90001", "附件上传失败"),
    ERROR_999("-999", "非法操作"),

    ;

    private final String code;
    private final String msg;

    public static SystemErrorCode findByMsg(String msg){
        if(StringUtils.isNotBlank(msg)){
            for (SystemErrorCode value : values()) {
                if (value.getMsg().equals(msg)) {
                    return value;
                }
            }
        }
        return null;
    }
}
